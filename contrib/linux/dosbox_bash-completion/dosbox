# dosbox(1) completion                                     -*- shell-script -*-
# vim: st=2:sw=2:et:ai:ft=bash

_dosbox()
{
  COMPREPLY=()
  local cur prev words cword
  _init_completion -s || return

  local IFS=$'|\t\n'
  local words_filter="${words[*]:1:$(( cword - 1 ))}"

  local -a \
       _main_opts=(
                    --help
                    -fullscreen -startmapper -noautoexec -securemode -scaler
                    -forcescaler -lang -machine -socket -exit
                  )\
     _repeat_opts=(
                    -c -conf
                  )\
  _exclusive_opts=(
                    --version --printconf --editconf -resetconf -eraseconf
                    -opencaptures -erasemapper -resetmapper
                  )\
    _opencaptures=(
                    "$BROWSER" firefox mpv pcmanfm pcmanfm-qt
                  )\
         _machine=(
                    hercules cga tandy pcjr ega vgaonly svga_s3 svga_et3000
                    svga_et4000 svga_paradise vesa_nolfb vesa_oldvbe
                  )\
          _scaler=(
                    none normal2x normal3x advmame2x advmame3x advinterp2x
                    advinterp3x hq2x hq3x 2xsai super2xsai supereagle tv2x
                    tv3x rgb2x rgb3x scan2x scan3x
                  )\
            _conf=(
                    "$XDG_CONFIG_HOME/dosbox/"
                  )\
  # As far as the shell is concerned the above, starting at "local -a",
  # is on one line, thus the above are all local arrays

  # setup nameref to point to array

  [[ ${prev:0:1} == - ]] && local -n _sub_opts=${prev//+(-)/_}

  # forcescaler uses same sub. options as scaler, so setup a nameref to it
  local -n _forcescaler=_scaler

  case "$cur" in
    --h*)
      # have to hope they tabbed
       man dosbox
       COMPREPLY=( " " )
      return;;
  esac

  case "$prev" in
    -?(-)conf)
      compopt -o plusdirs
      while read -r
      do
        [[ ${REPLY} =~ ${cur//[.]/[.]} ]] &&
          COMPREPLY+=( "${REPLY#@(${words_filter})}" )
                             # ^^^^^^^^^^^^^^
                   # removes already selected .conf(s)
      done < <(
            # when no input, list any .conf files in ./
            [[ $cur ]] ||
              compgen -f -X '!*.@(conf|CONF)' "./"
            # if there is input, list potential matches
            [[ ${#cur} -gt 0 ]] &&
              compgen -f -X '!*.@(conf|CONF)' "${cur}" -- "${cur}"
            # list .conf files in pre-configured location

            while read -r dir
            do
              [[ ${dir%/} == ${cur%/*} ]] && continue
                compgen -f -X '!*.@(conf|CONF)' "${dir%/}/" -- "${cur}"
            done <<<"${_sub_opts[*]}"
          )
      return;;
    -?(-)opencaptures)
      COMPREPLY=( \
        $( compgen -W "$( type -P "${_sub_opts[@]}" )" -- "${cur}" )
      )
      # include filenames plusdirs ?
      return;;
    -?(-)@(?(force)scaler|machine))
      COMPREPLY=( \
        $( compgen -W "${_sub_opts[*]}" -- "${cur}" )
      )
      return;;
  esac

  [[ ${words[@]} =~ [\ ](${_exclusive_opts[*]}) ]] && return
  compopt -o plusdirs
  COMPREPLY=( $(
    [[ $cword -gt 1 ]] ||
      compgen -W "${_exclusive_opts[*]}"               -- "${cur}"

     compgen  -W "${_repeat_opts[*]}"                  -- "${cur}"
     compgen  -W "${_main_opts[*]#@(${words_filter})}" -- "${cur}"
     compgen  -f -X '!*.@(bat|BAT|com|COM|exe|EXE)'    -- "${cur}"
    )
  )
}

complete -F _dosbox -o nosort dosbox
